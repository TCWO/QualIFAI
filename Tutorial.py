
"""Step0 run QC_model_implementation file"""

"""Step1:Split tiles into smaller tiles of 512*512
QualIfAI models take as an input images of size 512*512.'split tiles' function tessalate input images into smaller tiles of size 512*512, since most of the artifacts are visible in DAPI channel. Running QualiIFAI on just DAPI channel is enough"""
from pathlib import Path
import os
full_path = os.path.realpath(__file__)
common_path=str(Path(full_path).parents[1]) 

input_image_path=common_path+'tiles/'
output_path=common_path+'cut_tiles/'
channel='DAPI'
split_tiles(input_image_path,output_path,channel)


"""step2classification prediction function takes as an input path to split tiles and path for output csv. this function generates classification prediction for each of the tiles.Clasification label is given based on consensus between label from knn and 
probability output of models"""

img_path_cl=common_path+'cut_tiles/'
csv_path=common_path+'/Data/classification_prediction.csv'

classification_prediction(img_path_cl,csv_path,10,8)





""" Step3 segmentation of artifacts. Takes as an input csv generated by classification function , and input images
"""
artifact_list=common_path+'/Data/classification_prediction.csv'
out_dir=common_path+'/mask'
img_path=common_path+'cut_tiles/'
segmentation(img_path,out_dir,artifact_list)




""" Step4 segmentation mask. Generates full masks for removing artifacts
"""




raw_image_path=common_path+'tiles/'
output_path=common_path+'hard_stitch/'
input_image_path=common_path+'cut_tiles/'
channel='DAPI'

merge_predictions(input_image_path,output_path,raw_image_path,channel)

""" Step5 generate cleaned image after removing artifacts
"""

Mask_path=common_path+'hard_stitch/'
Raw_image_path=common_path+'tiles/'
output_path=common_path+'/corrected/'
artifacts_free_image(Mask_path,Raw_image_path,output_path)